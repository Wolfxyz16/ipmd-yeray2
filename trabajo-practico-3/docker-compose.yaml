#zookeeper: Servicio de coordinación que gestiona el estado del clúster de Kafka. Es requerido para que Kafka funcione correctamente.
#kafka: Plataforma de mensajería en streaming. Recibe y distribuye los mensajes (tuits) generados por el productor.
#kafka-mqtt: Proxy que recibe mensajes desde MQTT (donde publica el generador) y los reenvía automáticamente a un tópico Kafka.
#mariadb: Base de datos relacional donde se cargan los datos estáticos (como mbti_labels.csv) y se consulta desde Flink.
#generador: Contenedor personalizado que ejecuta un script en Python. Este lee los tuits del dataset y los publica al topic MQTT (tuits).
#elasticsearch: Base de datos orientada a documentos, utilizada como sumidero para los resultados del procesamiento de Flink.
#kibana: Herramienta de visualización de datos. Se conecta a Elasticsearch y permite crear gráficos sobre los datos procesados.
#jobmanager: Nodo maestro de Flink. Coordina las tareas de procesamiento y gestiona el clúster Flink.
#taskmanager: Nodo de ejecución de Flink. Ejecuta las tareas distribuidas que le asigna el JobManager.
#sql-client: Cliente interactivo de Flink SQL. Permite definir tablas, consultar datos desde Kafka y MariaDB, y escribir resultados en Elasticsearch.

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
        - ipmd-net

  kafka:
    image: confluentinc/cp-kafka:7.4.1
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
    networks:
        - ipmd-net

  kafka-mqtt:
    image: confluentinc/cp-kafka-mqtt:7.4.1
    container_name: kafka-mqtt
    environment:
      KAFKA_MQTT_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_MQTT_TOPIC_REGEX_LIST: tuits:ktuits
      KAFKA_MQTT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_MQTT_CONFLUENT_TOPIC_REPLICATION_FACTOR: 1 
    ports:
      - "1883:1883"
    depends_on:
      - kafka
    networks:
      - ipmd-net

  mariadb:
    image: mariadb
    restart: always
    ports:
      - "3306:3306"
    volumes:
      - ./db:/docker-entrypoint-initdb.d/:ro
      - ./data/mbti_labels.csv:/tmp/data/mbti_labels.csv
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: wolfxyz
      MYSQL_PASSWORD: wolfxyz
      MYSQL_DATABASE: ipmd
    networks:
        - ipmd-net

  generador:
    build:
      context: .
      dockerfile: generador/Dockerfile
    container_name: generador
    command: python ./generador.py
    volumes:
      - ./data:/trabajo-practico-3/data
    depends_on:
      - kafka-mqtt
    networks:
      - ipmd-net

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.10
    environment:
      - ES_JAVA_OPTS=-Dlog4j2.disable.jmx=true
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    networks:
        - ipmd-net

  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
        - ipmd-net

  jobmanager:
    image: flink:1.11.0-scala_2.11
    container_name: jobmanager
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
    networks:
        - ipmd-net

  taskmanager:
    image: flink:1.11.0-scala_2.11
    container_name: taskmanager
    depends_on:
      - jobmanager
    command: taskmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 10
    networks:
        - ipmd-net

  sql-client:
    image: jark/demo-sql-client:0.2
    container_name: sql-client
    depends_on:
      - kafka
      - jobmanager
      - elasticsearch
    environment:
      FLINK_JOBMANAGER_HOST: jobmanager
      ZOOKEEPER_CONNECT: zookeeper
      KAFKA_BOOTSTRAP: kafka
      MYSQL_HOST: mariadb
      ES_HOST: elasticsearch
    networks:
      - ipmd-net

networks:
  ipmd-net:
    # Specify driver options
    driver: bridge
